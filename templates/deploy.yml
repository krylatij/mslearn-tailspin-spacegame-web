parameters:
- name: buildConfiguration
  type: string
  default: false
  values:
  - 'Release'
  - 'Debug'

- name: env
  type: string
  default: false
  values:
  - 'dev'
  - 'testing'
  - 'staging'

jobs:
- deployment: 'Deploy'
  displayName: 'Deploy on ${{ parameters.env }}'
  pool:
    vmImage: 'ubuntu-20.04'
  variables:
  - group: ${{ parameters.env }}
  environment: ${{ parameters.env }}
  strategy:
    runOnce:
      deploy:
        steps:
        - download: current
          artifact: drop
        - task: AzureWebApp@1
          displayName: 'Azure App Service Deploy: website'
          inputs:
            azureSubscription: 'service-conn-tailspin-${{ parameters.env }}'
            appName: '$(WebAppName)'
            package: '$(Pipeline.Workspace)/drop/${{ parameters.buildConfiguration }}/Tailspin.SpaceGame.Web.zip'

- job: RunUITests
  dependsOn: Deploy
  displayName: 'Run UI tests'
  pool:
    vmImage: 'windows-2019'
  variables:
  - group: 'Release'
  steps: 
  - task: UseDotNet@2
    displayName: 'Use .NET SDK $(dotnetSdkVersion)'
    inputs:
      version: '$(dotnetSdkVersion)'
  - task: DotNetCoreCLI@2
    displayName: 'Build the project - $(buildConfiguration)'
    inputs:
      command: 'build'
      arguments: '--configuration $(buildConfiguration)'
      projects: '$(System.DefaultWorkingDirectory)/**/*UITests.csproj'
  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests - $(buildConfiguration)'
    inputs:
      command: 'test'
      arguments: '--no-build --configuration $(buildConfiguration)'
      publishTestResults: true
      projects: '$(System.DefaultWorkingDirectory)/**/*UITests.csproj'